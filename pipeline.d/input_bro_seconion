################################################################################
# Copyright 2014-2015 Jose Ortiz
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################
input {
  udp {
    type => "syslog"
    port => "5514"
    tags => [ "securityonion" ]
  }
}

filter {
  if [message] =~ /^#/ {
    drop { }

  # preprocess logs and classify them
  } else if [type] == "syslog" and "securityonion" in [tags] {
      grok {
        match => [ "message", '\<%{NUMBER:syslog_pri}\>%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_host} %{DATA:syslog_program}: %{GREEDYDATA:message}' ]
        overwrite => [ "message" ]
        break_on_match => "false"
        add_tag => [ "%{syslog_program}" ]
      } #end grok
      syslog_pri {}
  } #end if

  # delete bro header data during log rotation
  if [message] =~ /^#/ {
    drop { }
  }

  if [type] == "syslog" and "bro_communication" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_COMMUNICATION}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "communication.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_conn" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_CONN}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "conn.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip.resp_h" ]
      } #end geoip
    } #end if [id.resp_h]
    if [id.orig_h] {
      geoip {
        source => "id.orig_h"
        add_tag => [ "geoip.origh" ]
      } #end geoip
    } #end if [id.orig_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_dhcp" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_DHCP}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "dhcp.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_dnp3" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_DNP3}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "dnp3.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_dns" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_DNS}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "dns.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_files" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_FILES}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "files.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_ftp" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_FTP}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "ftp.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_http" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_HTTP}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "http.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_intel" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_INTEL}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "intel.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_irc" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_IRC}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "irc.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_known_certs" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_KNOWNCERTS}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "known_certs.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_known_hosts" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_KNOWNHOSTS}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "known_hosts.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_known_services" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_KNOWNSERVICES}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "known_services.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_modbus" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_MODBUS}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "modbus.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_notice" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_NOTICE}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "notice.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_radius" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_RADIUS}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "radius.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_reporter" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_REPORTER}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "reporter.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_signatures" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_SIGNATURES}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "signatures.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_smtp" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_SMTP}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "smtp.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_snmp" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_SNMP}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "snmp.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_socks" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_SOCKS}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "socks.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_software" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_SOFTWARE}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "software.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_ssh" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_SSH}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "ssh.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_ssl" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_SSL}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "ssl.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_traceroute" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_TRACEROUTE}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "traceroute.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_tunnels" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_TUNNELS}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "tunnels.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_weird" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_WEIRD}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "weird.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

  if [type] == "syslog" and "bro_x509" in [tags] {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      match => [ "message", "%{BRO_X509}" ]
      add_tag => [ "grokked" ]
      remove_field => [ "host", "syslog_pri", "syslog_timestamp", "syslog_host", "syslog_program", "syslog_severity_code", "syslog_facility_code", "syslog_severity", "syslog_facility" ]
    } #end grok
    mutate {
      rename => { "message" => "x509.log"}
      add_tag => [ "mutated" ]
    } #end mutate
    if [id.resp_h] {
      geoip {
        source => "id.resp_h"
        add_tag => [ "geoip" ]
      } #end geoip
    } #end if [id.resp_h]
    if [ts] {
      date {
        match => [ "ts", "UNIX" ]
        add_tag => [ "tsmatch" ]
      } #end date
    } #end if [ts]
  } #end if [type]

} #####end filter####

